<input @ref="input"
       type="@Type"
       class="form-control @(Class) @(string.IsNullOrWhiteSpace(Model.ErrorMessage) ? "" : "is-invalid")"
       placeholder="@Placeholder"
       autofocus="@Autofocus"
       @bind="Model.Value"
       @bind:event="oninput"
       @onchange="OnChangeCallback"
       @onkeyup="OnKeyUpCallback">

@if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
{
    <div class="invalid-feedback">
        @Model.ErrorMessage
    </div>
}

@code {
    private ElementReference input;

    [Parameter]
    public ValueErrorModel Model { get; set; }

    [Parameter]
    public string Placeholder { get; set; } = "Value";

    [Parameter]
    public string Class { get; set; } = "";

    [Parameter]
    public string Type { get; set; } = "text";

    [Parameter]
    public EventCallback<ChangeEventArgs> OnChangeCallback { get; set; }

    [Parameter]
    public EventCallback OnKeyUpCallback { get; set; }

    [Parameter]
    public bool Autofocus { get; set; } = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && Autofocus)
            input.FocusAsync();
    }
}